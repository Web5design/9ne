WARNING: This file is in flux at the moment and my contain incorrect
or incomplete information

Copyright (c) 1985 Free Software Foundation, Inc http://www.fsf.org/;
See end for conditions.

Copyright (c) 2006 Rob Rohan; http://robrohan.com

You are looking at the 9ne tutorial.

9ne commands generally involve the CONTROL key (sometimes labeled
CTRL or CTL) or the META key (sometimes labeled EDIT or ALT).  Rather than
write that in full each time, we'll use the following abbreviations:

 C-<chr>  means hold the CONTROL key while typing the character <chr>
	  Thus, C-f would be: hold the CONTROL key and type f. On Windows you'll
	  have to also hold the SHIFT key. So C-<chr> becomes CTRL-SHIFT-<chr> on
	  Windows.
 M-<chr>  means hold the META or EDIT or ALT key down while typing <chr>.
	  If there is no META, EDIT or ALT key or they don't work (as on Windows or
	  Firefox on the Mac), instead press and release the ESC key and then 
	  type <chr>.  We write <ESC> for the ESC key.

Important note: to end the 9ne session, type C-x C-c.  (Two characters.)
The characters ">>" at the left margin indicate directions for you to
try using a command. 

The first thing that you need to know is how to move around from place
to place in the text. 

* BASIC CURSOR CONTROL
----------------------

How do you move to a specific place within the text on the screen?

There are several ways you can do this.  The most basic way is to use
the commands C-p, C-b, C-f, and C-n.  Each of these commands moves the
cursor one row or column in a particular direction on the screen.
Here is a table showing these four commands and the directions they
move:

NOTE: On Windows these keys do not work they are system level key 
strokes. To move around on Windows use the ARROW keys.

 
			  Previous line, C-p
				  :
				  :
   Backward, C-b .... Current cursor position .... Forward, C-f
				  :
				  :
			    Next line, C-n

>> Move the cursor to the line in the middle of that diagram
   using C-n or C-p.  Then type C-l to see the whole diagram
   centered in the screen.

C-l	Clear screen and redisplay all the text,
	 moving the text around the cursor
	 to the center of the screen.
	 (That's CONTROL-L, not CONTROL-1.)

You'll probably find it easy to think of these by letter: P for
previous, N for next, B for backward and F for forward.  These are the
basic cursor positioning commands, and you'll be using them ALL the
time, so it would be of great benefit if you learn them now.

>> Do a few C-n's to bring the cursor down to this line.

>> Move into the line with C-f's and then up with C-p's.
   See what C-p does when the cursor is in the middle of the line.

Each line of text ends with a Newline character, which serves to
separate it from the following line.  The last line in your file ought
to have a Newline at the end (but 9ne does not require it to have
one).

>> Try to C-b at the beginning of a line.  It should move to
   the end of the previous line.  This is because it moves back
   across the Newline character.

C-f can move across a Newline just like C-b.

>> Do a few more C-b's, so you get a feel for where the cursor is.
   Then do C-f's to return to the end of the line.
   Then do one more C-f to move to the following line.

When you move past the top or bottom of the screen, the text beyond
the edge shifts onto the screen.  This is called "scrolling".  It
enables 9ne to move the cursor to the specified place in the text
without moving it off the screen.

>> Try to move the cursor off the bottom of the screen with C-n, and
   see what happens.

C-a and C-e move to the beginning or end of a line.

NOTE: These key strokes do not work on Windows. Use the HOME and END
keys on Windows.

>> Try a couple of C-a's, and then a couple of C-e's.

See how repeated C-a's do nothing.

The location of the cursor in the text is also called "point".  To
paraphrase, the cursor shows on the screen where point is located in
the text.

Here is a summary of simple cursor-moving operations, including the
word and sentence moving commands:

	C-f	Move forward a character
	C-b	Move backward a character

	C-n	Move to next line
	C-p	Move to previous line

	C-a	Move to beginning of line
	C-e	Move to end of line

>> Try all of these commands now a few times for practice.
   These are the most often used commands.

Two other important cursor motion commands are M-< (META Less-than),
which moves to the beginning of the whole text, and M-> (META
Greater-than), which moves to the end of the whole text.

If you find that M-< and M-> do not work with your browser / OS try
Shift+HOME and Shift+END instead.

On most terminals, the "<" is above the comma, so you must use the
shift key to type it.  On these terminals you must use the shift key
to type M-< also; without the shift key, you would be typing M-comma.

>> Try M-< now, to move to the beginning of the tutorial.
   Then use C-n repeatedly to move back here.

>> Try M-> now, to move to the end of the tutorial.
   Then use C-p repeatedly to move back here.

You can also move the cursor with the arrow keys, if your terminal has
arrow keys.  We recommend learning C-b, C-f, C-n and C-p for three
reasons.  First, they work on all kinds of terminals.  Second, once
you gain practice at using 9ne, you will find that typing these Control
characters is faster than typing the arrow keys (because you do not
have to move your hands away from touch-typing position).  Third, once
you form the habit of using these Control character commands, you can
easily learn to use other advanced cursor motion commands as well.

If you are using a windowed display, such as X11 or Mac OS X, there
should be a tall rectangular area called a scroll bar at the left or
right hand side of the 9ne window.  You can scroll the text by clicking 
the mouse in the scroll bar.

>> Try pressing the middle button at the top of the highlighted area
   within the scroll bar.  This should scroll the text to a position
   determined by how high or low you click.

>> Try moving the mouse up and down, while holding the middle button
   pressed down.  You'll see that the text scrolls up and down as
   you move the mouse.


* WHEN 9NE IS HUNG
--------------------

If 9ne stops responding to your commands, you can stop it safely by
typing C-g.  You can use C-g to stop a command which is taking too
long to execute.

You can also use C-g to discard the beginning of a command that you do 
not want to finish.

>> Type C-x, then type C-g. Now type C-f.  It should move just one 
   character, because you canceled the argument with C-g.

If you have typed an <ESC> by mistake, you can get rid of it
with a C-g.


* INSERTING AND DELETING
------------------------

If you want to insert text, just type the text.  Characters which you
can see, such as A, 7, *, etc. are taken by 9ne as text and inserted
immediately.  Type <Return> (the carriage-return key) to insert a
Newline character.

You can delete the last character you typed by typing <Delete>.
<Delete> is a key on the keyboard, which may be labeled "Del".  In
some cases, the "Backspace" key serves as <Delete>, but not always!

More generally, <Delete> deletes the character immediately before the
current cursor position.

>> Do this now--type a few characters, then delete them
   by typing <Delete> a few times.  Don't worry about this file
   being changed; you will not alter the master tutorial.  This is
   your personal copy of it.

NOTE: Current version bug. Wrapping doesn't work... like at all.

When a line of text gets too big for one line on the screen, the line
of text is "continued" onto a second screen line.  A backslash ("\")
(or, if you're using a windowed display, a little curved arrow) at the
right margin indicates a line which has been continued.

>> Insert text until you reach the right margin, and keep on inserting.
   You'll see a continuation line appear.

>> Use <Delete>s to delete the text until the line fits on one screen
   line again.  The continuation line goes away.

You can delete a Newline character just like any other character.
Deleting the Newline character between two lines merges them into
one line.  If the resulting combined line is too long to fit in the
screen width, it will be displayed with a continuation line.

>> Move the cursor to the beginning of a line and type <Delete>.  This
   merges that line with the previous line.

>> Type <Return> to reinsert the Newline you deleted.

You've now learned the most basic way of typing something in
9ne and correcting errors.  Here is a summary of the delete operations:

	<Delete>     delete the character just before the cursor
	C-d   	     delete the next character after the cursor

	C-k	     kill from the cursor position to end of line

* FILES
-------

In order to make the text you edit permanent, you must put it in a
file.  Otherwise, it will go away when your invocation of 9ne goes
away.  In order to put your text in a file, you must "find" the file
before you enter the text.  (This is also called "visiting" the file.)

Finding a file means that you see the contents of the file within
9ne.  In many ways, it is as if you were editing the file itself.
However, the changes you make using 9ne do not become permanent
until you "save" the file.  This is so you can avoid leaving a
half-changed file on the system when you do not want to.

If you look near the bottom of the screen you will see a line that
begins and ends with dashes, and starts with "--:-- TUTORIAL" or
something like that.  This part of the screen normally shows the name
of the file that you are visiting.  Right now, you are visiting a file
called "TUTORIAL" which is your personal scratch copy of the 9ne
tutorial.  When you find a file with 9ne, that file's name will
appear in that precise spot.

One special thing about the command for finding a file is that you
have to say what file name you want.  We say the command "reads an
argument from the terminal" (in this case, the argument is the name of
the file).  After you type the command

	C-x C-f   Find a file

9ne asks you to type the file name.  The file name you type appears
on the bottom line of the screen.  The bottom line is called the
minibuffer when it is used for this sort of input.  You can use
ordinary 9ne editing commands to edit the file name.

While you are entering the file name (or any minibuffer input),
you can cancel the command with C-g.

>> Type C-x, then type C-g.  This cancels the minibuffer,
   and also cancels the C-x C-f command that was using the
   minibuffer.  So you do not find any file.

When you have finished entering the file name, type <Return> to
terminate it.  Then C-x C-f command goes to work, and finds the file
you chose.  The minibuffer disappears when the C-x C-f command is
finished.

In a little while the file contents appear on the screen, and you can
edit the contents.  When you wish to make your changes permanent,
type the command

	C-x C-s   Save the file

This copies the text within 9ne into the file.

When saving is finished, 9ne displays the name of the file written.
You should save fairly often, so that you will not lose very much
work if the system should crash.

>> Type C-x C-s, saving your copy of the tutorial.
   This should show "Wrote ...TUTORIAL" at the bottom of the screen.

You can find an existing file, to view it or edit it.  You can also
find a file which does not already exist.  This is the way to create a
file with 9ne find the file, which will start out empty, and then
begin inserting the text for the file.  When you ask to "save" the
file, 9ne will really create the file with the text that you have
inserted.  From then on, you can consider yourself to be editing an
already existing file.

* EXTENDING THE COMMAND SET
---------------------------

There are many, many more 9ne commands than could possibly be put
on all the control and meta characters.  9ne gets around this with
the X (eXtend) command.  This comes in two flavors:

	C-x	Character eXtend.  Followed by one character.
	M-x	Named command eXtend.  Followed by a long name.

These are commands that are generally useful but used less than the
commands you have already learned about.  You have already seen two of
them: the file commands C-x C-f to Find and C-x C-s to Save.  Another
example is the command to end the 9ne session--this is the command
C-x C-c.  (Do not worry about losing changes you have made; C-x C-c
offers to save each changed file before it kills the 9ne.)

The time to use C-x C-c is when you are about to log out.  It's also
the right thing to use to exit an 9ne invoked under mail handling
programs and other miscellaneous utilities. 

There are many C-x commands.  Here is a list of the ones you have learned:

	C-x C-f		Find file.
	C-x C-s		Save file.
	C-x C-c		Quit 9ne.

Named eXtended commands are commands which are used even less
frequently, or commands which are used only in certain modes.  An
example is the command replace-string, which globally replaces one
string with another.  When you type M-x, 9ne prompts you at the
bottom of the screen with M-x and you should type the name of the
command; in this case, "replace-string". 

* ECHO AREA
-----------

If 9ne sees that you are typing multi-character commands slowly, it
shows them to you at the bottom of the screen in an area called the
"echo area".  The echo area contains the bottom line of the screen.

* MODE LINE
-----------

The line immediately above the echo area is called the "mode line".
The mode line says something like this:

--:**  TUTORIAL          (Fundamental)--L670--58%----------------

This line gives useful information about the status of 9ne and
the text you are editing.

You already know what the filename means--it is the file you have
found.  -NN%-- indicates your current position in the text; it means
that NN percent of the text is above the top of the screen. 

The L and digits indicate position in another way: they give the
current line number of point.

The stars near the front mean that you have made changes to the text.
Right after you visit or save a file, that part of the mode line shows
no stars, just dashes.

The part of the mode line inside the parentheses is to tell you what
editing modes you are in.  The default mode is Fundamental which is
what you are using now.  It is an example of a "major mode".  

9ne has many different major modes.  Some of them are meant for
editing different languages and/or kinds of text, such as HTML mode,
Javascript mode, etc.  At any time one and only one major mode is active,
and its name can always be found in the mode line just where
"Fundamental" is now.

Each major mode makes a few commands behave differently.  For example,
there are commands for creating comments in a program, and since each
programming language has a different idea of what a comment should
look like, each major mode has to insert comments differently.  Each
major mode is the name of an extended command, which is how you can
switch to that mode.  For example, M-x fundamental-mode is a command to
switch to Fundamental mode.

If you are going to be editing English text, such as this file, you
should probably use Text Mode.
>> Type M-x text mode<Return>.

Don't worry, none of the  9ne commands you have learned changes in
any great way.

Major modes usually make subtle changes like that one: most commands
do "the same job" in each major mode, but they work a little bit
differently.

* GETTING MORE HELP
-------------------

In this tutorial we have tried to supply just enough information to
get you started using 9ne.  There is so much available in 9ne that
it would be impossible to explain it all here.  However, you may want
to learn more about 9ne since it has many other useful features.

* CONCLUSION
------------

Remember, to exit 9ne permanently use C-x C-c.

This tutorial is meant to be understandable to all new users, so if
you found something unclear, don't sit and blame yourself - complain!


* COPYING
---------

This tutorial descends from a long line of Emacs tutorials
starting with the one written by Stuart Cracraft for the original Emacs.

This version of the tutorial, like GNU Emacs, is copyrighted, and
comes with permission to distribute copies on certain conditions:

Copyright (c) 1985, 1996 Free Software Foundation

   Permission is granted to anyone to make or distribute verbatim copies
   of this document as received, in any medium, provided that the
   copyright notice and permission notice are preserved,
   and that the distributor grants the recipient permission
   for further redistribution as permitted by this notice.

   Permission is granted to distribute modified versions
   of this document, or of portions of it,
   under the above conditions, provided also that they
   carry prominent notices stating who last altered them.

The conditions for copying Emacs itself are more complex, but in the
same spirit.  Please read the file COPYING and then do give copies of
GNU Emacs to your friends.  Help stamp out software obstructionism
("ownership") by using, writing, and sharing free software!
